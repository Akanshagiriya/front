image: markharding/minds-front-base

services:
  - docker:dind

stages:
  - test
  - build
  - prepare
  - deploy

test:
  image: circleci/node:8-browsers
  stage: test
  script:
    - npm install # Should be cached...
    - npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI

build:review:
  stage: build
  script:
    - npm install # TODO: Why is this needed?
    - npm run postinstall
    - npm install -g gulp-cli
    - gulp build.sass && gulp build.sass ##weird build needs to be run twice for now
    - sh build/base-locale.sh dist
  artifacts:
    name: "$CI_COMMIT_REF_SLUG"
    paths:
      - dist
  except:
    refs:
      - master
      - test/gitlab-ci

build:production:en:
  stage: build
  script:
    - npm install # TODO: Why is this needed?
    - npm run postinstall
    - npm install -g gulp-cli
    - gulp build.sass --deploy-url=https://cdn-assets.minds.com/front/dist/en && gulp build.sass --deploy-url=https://cdn-assets.minds.com/front/dist/en ##weird build needs to be run twice for now
    - sh build/base-locale.sh dist https://cdn-assets.minds.com/front/dist
  artifacts:
    name: "$CI_COMMIT_REF_SLUG"
    paths:
      - dist/en
  only:
    refs:
      - master
      - test/gitlab-ci

build:production:i18n:
  stage: build
  script:
    - npm install # TODO: Why is this needed?
    - npm run postinstall
    - npm install -g gulp-cli
    - gulp build.sass --deploy-url=https://cdn-assets.minds.com/front/dist/en && gulp build.sass --deploy-url=https://cdn-assets.minds.com/front/dist/en ##weird build needs to be run twice for now
    - sh build/i18n-locales-all.sh dist https://cdn-assets.minds.com/front/dist
  artifacts:
    name: "$CI_COMMIT_REF_SLUG"
    paths:
      - dist/vi
  only:
    refs:
      - master
      - test/gitlab-ci

prepare:
  stage: prepare
  image: minds/ci:latest
  script:
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY} 
    - docker build -t $CI_REGISTRY_IMAGE/front-init:$CI_BUILD_REF -f containers/front-init/Dockerfile dist/.
    - docker push $CI_REGISTRY_IMAGE/front-init:$CI_BUILD_REF
  dependencies:
    - build:review
  except:
    refs:
      - master
      - test/gitlab-ci

deploy:review:
  stage: deploy
  image: minds/helm-eks:latest
  script:
    - aws eks update-kubeconfig --name=sandbox
    - git clone --branch=sandbox-wip https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/minds/helm-charts.git
    - "helm upgrade \
        --install \
        --reuse-values \
        --set frontInit.image.repository=$CI_REGISTRY_IMAGE/front-init \
        --set frontInit.image.tag=$CI_BUILD_REF \
        --set domain=$CI_BUILD_REF_SLUG.$KUBE_INGRESS_BASE_DOMAIN \
        --set elasticsearch.clusterName=$CI_BUILD_REF_SLUG--elasticsearch \
        --wait \
        $CI_BUILD_REF_SLUG \
        ./helm-charts/minds"
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://$CI_BUILD_REF_SLUG.$KUBE_INGRESS_BASE_DOMAIN
    on_stop: deploy:review:stop
  except: 
    refs:
      - master
      - test/gitlab-ci

deploy:review:stop:
  stage: deploy
  image: minds/helm-eks:latest
  script:
    - aws eks update-kubeconfig --name=sandbox
    - helm del --purge $CI_BUILD_REF_SLUG
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://$CI_BUILD_REF_SLUG.$KUBE_INGRESS_BASE_DOMAIN
    action: stop
  variables:
    GIT_STRATEGY: none
  when: manual
  except: 
    refs:
      - master
      - test/gitlab-ci


deploy:production:
  stage: deploy
  image: minds/ci:latest
  script:
    - aws s3 sync dist $REPOSITORY_URL
    - aws ecs update-service --service=$SERVICE --force-new-deployment --region us-east-1 --cluster=$CLUSTER
  only:
    refs:
      - master
      - test/gitlab-ci
  dependencies:
    - build:production:en
    - build:production:i18n
  environment:
    name: production
